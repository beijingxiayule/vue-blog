{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{210:function(n,t,o){\"use strict\";o.r(t);var e=o(0),i=Object(e.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":this.$parent.slotKey}},[t(\"h4\",{attrs:{id:\"从面试题引发的一个关于settimeout的第三个参数的问题：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从面试题引发的一个关于settimeout的第三个参数的问题：\"}},[this._v(\"#\")]),this._v(\" 从面试题引发的一个关于setTimeout的第三个参数的问题：\")]),this._v(\" \"),t(\"pre\",[t(\"code\",[this._v(\"题目：\\nfor(var i = 0; i < 5; i++ ) {\\n    setTimeout(function() {\\n        console.log(i);\\n    },1000)\\n}\\n一秒后直接输出5个5，\\n\\n解决办法1：人为给 console.log(i); 创造作用域，保存i的值。\\nfor (var i = 0; i < 5; i++) { \\n    (function(i){      //立刻执行函数\\n        setTimeout(function (){\\n            console.log(i);  \\n         },1000);  \\n    })(i);\\n}\\n\\n解决办法2：let 代替 var\\nfor (let i = 0; i < 5; i++) {\\n    setTimeout(function (){\\n        console.log(i);  \\n     },1000);  \\n}\\n\\n解决办法3：使用setTimeout的第三个参数方法\\nfor(var i = 0; i < 5; i++ ) {\\n    setTimeout(function(a) {\\n        console.log(a);\\n    },1000,i)\\n}\\n\\n\\nsetTimeout(callback,delay,param1,param2,param3...)\\n第三个以及第三个后面的，会作为参数传递给回调函数callback\\neg：\\n\\tsetTimeout(function(a,b,c) {\\n\\t    console.log(a+b+c);\\n\\t},1000,1,2,3)\\n\\n官方文档：https://developer.mozilla.org/zh-CN/docs/Web/API/Window/setTimeout\\n\")])])])}),[],!1,null,null,null);t.default=i.exports}}]);","extractedComments":[]}